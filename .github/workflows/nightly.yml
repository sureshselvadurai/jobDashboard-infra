name: Nightly Test and ECR Push

on:
  schedule:
    - cron: '0 8 10 * *'
  workflow_dispatch:

env:
  REPO: https://github.com/sureshselvadurai/jobDashboard.git
  REGION: us-east-1

  # ECR
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  BACKEND_IMAGE: ${{ secrets.ECR_REGISTRY }}/job-backend
  FRONTEND_IMAGE: ${{ secrets.ECR_REGISTRY }}/job-frontend
  NOTIFIER_IMAGE: ${{ secrets.ECR_REGISTRY }}/job-notifier

  # DB ENV (used by backend)
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_NAME: ${{ secrets.DB_NAME }}

  # Notifier ENV
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:

  run-test:
    name: Run Compose & Health Check
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v3

      - name: Clone Main Repo
        run: git clone $REPO main-repo

      - name: Create .env for Docker Compose
        run: |
          cat <<EOF > main-repo/.env
          DB_USER=${{ env.DB_USER }}
          DB_PASSWORD=${{ env.DB_PASSWORD }}
          DB_HOST=${{ env.DB_HOST }}
          DB_PORT=${{ env.DB_PORT }}
          DB_NAME=${{ env.DB_NAME }}
          SLACK_WEBHOOK_URL=${{ env.SLACK_WEBHOOK_URL }}
          EOF

      - name: Start Docker Compose
        run: |
          cd main-repo
          docker compose --env-file .env up -d
          sleep 30

      - name: Call /jobs/refresh-and-notify API
        run: |
          response=$(curl -s -o result.json -w "%{http_code}" http://localhost:8000/jobs/refresh-and-notify/)
          if [ "$response" -ne 200 ]; then
            echo "❌ Health check failed with status $response"
            cat result.json
            exit 1
          fi
          echo "✅ Refresh and notify successful"

  push-images:
    name: Build and Push Images to ECR
    runs-on: ubuntu-latest
    environment: dev
    needs: run-test
    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v3

      - name: Clone Main Repo
        run: git clone $REPO main-repo

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region $REGION | \
            docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build & Push Backend Image
        run: |
          docker build \
            --build-arg DB_USER=$DB_USER \
            --build-arg DB_PASSWORD=$DB_PASSWORD \
            --build-arg DB_HOST=$DB_HOST \
            --build-arg DB_PORT=$DB_PORT \
            --build-arg DB_NAME=$DB_NAME \
            -t $BACKEND_IMAGE:latest main-repo/backend
          docker push $BACKEND_IMAGE:latest

      - name: Build & Push Frontend Image
        run: |
          docker build -t $FRONTEND_IMAGE:latest main-repo/frontend
          docker push $FRONTEND_IMAGE:latest

      - name: Build & Push Notifier Image
        run: |
          docker build \
            --build-arg SLACK_WEBHOOK_URL=$SLACK_WEBHOOK_URL \
            -t $NOTIFIER_IMAGE:latest main-repo/notifier
          docker push $NOTIFIER_IMAGE:latest
